{
  "contractName": "TransparentUpgradeableProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x6080604052604051620018d9380380620018d9833981810160405281019062000029919062000735565b82816200003e82825f6200005a60201b60201c565b505062000051826200009760201b60201c565b50505062000a5d565b6200006b83620000f560201b60201c565b5f82511180620000785750805b1562000092576200009083836200014c60201b60201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000c86200018260201b60201c565b82604051620000d9929190620007be565b60405180910390a1620000f281620001dd60201b60201c565b50565b6200010681620002c460201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606200017a8383604051806060016040528060278152602001620018b2602791396200038d60201b60201c565b905092915050565b5f620001b67fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035f1b6200041b60201b60201c565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200024e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000245906200086d565b60405180910390fd5b80620002827fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035f1b6200041b60201b60201c565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002d5816200042460201b60201c565b62000317576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200030e9062000901565b60405180910390fd5b806200034b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6200041b60201b60201c565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808573ffffffffffffffffffffffffffffffffffffffff1685604051620003b891906200096b565b5f60405180830381855af49150503d805f8114620003f2576040519150601f19603f3d011682016040523d82523d5f602084013e620003f7565b606091505b509150915062000410868383876200044660201b60201c565b925050509392505050565b5f819050919050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315620004b5575f835103620004ac5762000469856200042460201b60201c565b620004ab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004a290620009d1565b60405180910390fd5b5b829050620004c8565b620004c78383620004d060201b60201c565b5b949350505050565b5f82511115620004e35781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000519919062000a3b565b60405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6200055e8162000533565b811462000569575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000597826200056c565b9050919050565b5f81519050620005ae8162000553565b620005b9816200058b565b905092915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200061182620005c9565b810181811067ffffffffffffffff82111715620006335762000632620005d9565b5b80604052505050565b5f6200064762000522565b905062000655828262000606565b919050565b5f67ffffffffffffffff821115620006775762000676620005d9565b5b6200068282620005c9565b9050602081019050919050565b5f5b83811015620006ae57808201518184015260208101905062000691565b5f8484015250505050565b5f620006cf620006c9846200065a565b6200063c565b905082815260208101848484011115620006ee57620006ed620005c5565b5b620006fb8482856200068f565b509392505050565b5f82601f8301126200071a5762000719620005c1565b5b81516200072c848260208601620006b9565b91505092915050565b5f805f606084860312156200074f576200074e6200052b565b5b5f6200075e868287016200059e565b935050602062000771868287016200059e565b925050604084015167ffffffffffffffff8111156200079557620007946200052f565b5b620007a38682870162000703565b9150509250925092565b620007b8816200058b565b82525050565b5f604082019050620007d35f830185620007ad565b620007e26020830184620007ad565b9392505050565b5f82825260208201905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f62000855602683620007e9565b91506200086282620007f9565b604082019050919050565b5f6020820190508181035f830152620008868162000847565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f620008e9602d83620007e9565b9150620008f6826200088d565b604082019050919050565b5f6020820190508181035f8301526200091a81620008db565b9050919050565b5f81519050919050565b5f81905092915050565b5f620009418262000921565b6200094d81856200092b565b93506200095f8185602086016200068f565b80840191505092915050565b5f62000978828462000935565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f620009b9601d83620007e9565b9150620009c68262000983565b602082019050919050565b5f6020820190508181035f830152620009ea81620009ab565b9050919050565b5f81519050919050565b5f62000a0782620009f1565b62000a138185620007e9565b935062000a258185602086016200068f565b62000a3081620005c9565b840191505092915050565b5f6020820190508181035f83015262000a558184620009fb565b905092915050565b610e478062000a6b5f395ff3fe60806040526004361061004d575f3560e01c80633659cfe6146100665780634f1ef286146100a65780635c60da1b146100c25780638f28397014610104578063f851a440146101445761005c565b3661005c5761005a610186565b005b610064610186565b005b348015610071575f80fd5b50d3801561007d575f80fd5b50d28015610089575f80fd5b506100a4600480360381019061009f9190610976565b6101a0565b005b6100c060048036038101906100bb9190610a02565b610204565b005b3480156100cd575f80fd5b50d380156100d9575f80fd5b50d280156100e5575f80fd5b506100ee6102a0565b6040516100fb9190610a6e565b60405180910390f35b34801561010f575f80fd5b50d3801561011b575f80fd5b50d28015610127575f80fd5b50610142600480360381019061013d9190610976565b6102f6565b005b34801561014f575f80fd5b50d3801561015b575f80fd5b50d28015610167575f80fd5b5061017061034a565b60405161017d9190610a6e565b60405180910390f35b61018e6103a0565b61019e61019961041f565b61042d565b565b6101a861044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101f8576101f38160405180602001604052805f8152505f61049f565b610201565b610200610186565b5b50565b61020c61044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102925761028d8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050600161049f565b61029b565b61029a610186565b5b505050565b5f6102a961044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102ea576102e361041f565b90506102f3565b6102f2610186565b5b90565b6102fe61044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361033e57610339816104ca565b610347565b610346610186565b5b50565b5f61035361044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036103945761038d61044c565b905061039d565b61039c610186565b5b90565b6103a861044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c90610b2d565b60405180910390fd5b61041d610516565b565b5f610428610518565b905090565b365f80375f80365f845af43d5f803e805f8114610448573d5ff35b3d5ffd5b5f6104787fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035f1b61056b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104a883610574565b5f825111806104b45750805b156104c5576104c383836105c3565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f361044c565b82604051610502929190610b4b565b60405180910390a1610513816105f0565b50565b565b5f6105447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61056b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f819050919050565b61057d816106cc565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606105e88383604051806060016040528060278152602001610deb60279139610782565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361065e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065590610be2565b60405180910390fd5b8061068a7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035f1b61056b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106d581610804565b610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90610c70565b60405180910390fd5b806107407f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61056b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808573ffffffffffffffffffffffffffffffffffffffff16856040516107ab9190610cfa565b5f60405180830381855af49150503d805f81146107e3576040519150601f19603f3d011682016040523d82523d5f602084013e6107e8565b606091505b50915091506107f986838387610826565b925050509392505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610887575f83510361087f5761083f85610804565b61087e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087590610d5a565b60405180910390fd5b5b829050610892565b610891838361089a565b5b949350505050565b5f825111156108ac5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e09190610dca565b60405180910390fd5b5f80fd5b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b61091a816108f1565b8114610924575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61095082610927565b9050919050565b5f8135905061096581610911565b61096e81610946565b905092915050565b5f6020828403121561098b5761098a6108e9565b5b5f61099884828501610957565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126109c2576109c16109a1565b5b8235905067ffffffffffffffff8111156109df576109de6109a5565b5b6020830191508360018202830111156109fb576109fa6109a9565b5b9250929050565b5f805f60408486031215610a1957610a186108e9565b5b5f610a2686828701610957565b935050602084013567ffffffffffffffff811115610a4757610a466108ed565b5b610a53868287016109ad565b92509250509250925092565b610a6881610946565b82525050565b5f602082019050610a815f830184610a5f565b92915050565b5f82825260208201905092915050565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d5f8201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b5f610b17604283610a87565b9150610b2282610a97565b606082019050919050565b5f6020820190508181035f830152610b4481610b0b565b9050919050565b5f604082019050610b5e5f830185610a5f565b610b6b6020830184610a5f565b9392505050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610bcc602683610a87565b9150610bd782610b72565b604082019050919050565b5f6020820190508181035f830152610bf981610bc0565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f610c5a602d83610a87565b9150610c6582610c00565b604082019050919050565b5f6020820190508181035f830152610c8781610c4e565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015610cbf578082015181840152602081019050610ca4565b5f8484015250505050565b5f610cd482610c8e565b610cde8185610c98565b9350610cee818560208601610ca2565b80840191505092915050565b5f610d058284610cca565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f610d44601d83610a87565b9150610d4f82610d10565b602082019050919050565b5f6020820190508181035f830152610d7181610d38565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f610d9c82610d78565b610da68185610a87565b9350610db6818560208601610ca2565b610dbf81610d82565b840191505092915050565b5f6020820190508181035f830152610de28184610d92565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26474726f6e582212205745052c7ead722a365092a14916da06bba0034979df1283c4156a263f3e104764736f6c63430008140033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
  "deployedBytecode": "0x60806040526004361061004d575f3560e01c80633659cfe6146100665780634f1ef286146100a65780635c60da1b146100c25780638f28397014610104578063f851a440146101445761005c565b3661005c5761005a610186565b005b610064610186565b005b348015610071575f80fd5b50d3801561007d575f80fd5b50d28015610089575f80fd5b506100a4600480360381019061009f9190610976565b6101a0565b005b6100c060048036038101906100bb9190610a02565b610204565b005b3480156100cd575f80fd5b50d380156100d9575f80fd5b50d280156100e5575f80fd5b506100ee6102a0565b6040516100fb9190610a6e565b60405180910390f35b34801561010f575f80fd5b50d3801561011b575f80fd5b50d28015610127575f80fd5b50610142600480360381019061013d9190610976565b6102f6565b005b34801561014f575f80fd5b50d3801561015b575f80fd5b50d28015610167575f80fd5b5061017061034a565b60405161017d9190610a6e565b60405180910390f35b61018e6103a0565b61019e61019961041f565b61042d565b565b6101a861044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036101f8576101f38160405180602001604052805f8152505f61049f565b610201565b610200610186565b5b50565b61020c61044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102925761028d8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050600161049f565b61029b565b61029a610186565b5b505050565b5f6102a961044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102ea576102e361041f565b90506102f3565b6102f2610186565b5b90565b6102fe61044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361033e57610339816104ca565b610347565b610346610186565b5b50565b5f61035361044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036103945761038d61044c565b905061039d565b61039c610186565b5b90565b6103a861044c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c90610b2d565b60405180910390fd5b61041d610516565b565b5f610428610518565b905090565b365f80375f80365f845af43d5f803e805f8114610448573d5ff35b3d5ffd5b5f6104787fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035f1b61056b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104a883610574565b5f825111806104b45750805b156104c5576104c383836105c3565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6104f361044c565b82604051610502929190610b4b565b60405180910390a1610513816105f0565b50565b565b5f6105447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61056b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f819050919050565b61057d816106cc565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b60606105e88383604051806060016040528060278152602001610deb60279139610782565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361065e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065590610be2565b60405180910390fd5b8061068a7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035f1b61056b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106d581610804565b610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90610c70565b60405180910390fd5b806107407f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61056b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808573ffffffffffffffffffffffffffffffffffffffff16856040516107ab9190610cfa565b5f60405180830381855af49150503d805f81146107e3576040519150601f19603f3d011682016040523d82523d5f602084013e6107e8565b606091505b50915091506107f986838387610826565b925050509392505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610887575f83510361087f5761083f85610804565b61087e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087590610d5a565b60405180910390fd5b5b829050610892565b610891838361089a565b5b949350505050565b5f825111156108ac5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e09190610dca565b60405180910390fd5b5f80fd5b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b61091a816108f1565b8114610924575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61095082610927565b9050919050565b5f8135905061096581610911565b61096e81610946565b905092915050565b5f6020828403121561098b5761098a6108e9565b5b5f61099884828501610957565b91505092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126109c2576109c16109a1565b5b8235905067ffffffffffffffff8111156109df576109de6109a5565b5b6020830191508360018202830111156109fb576109fa6109a9565b5b9250929050565b5f805f60408486031215610a1957610a186108e9565b5b5f610a2686828701610957565b935050602084013567ffffffffffffffff811115610a4757610a466108ed565b5b610a53868287016109ad565b92509250509250925092565b610a6881610946565b82525050565b5f602082019050610a815f830184610a5f565b92915050565b5f82825260208201905092915050565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d5f8201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b5f610b17604283610a87565b9150610b2282610a97565b606082019050919050565b5f6020820190508181035f830152610b4481610b0b565b9050919050565b5f604082019050610b5e5f830185610a5f565b610b6b6020830184610a5f565b9392505050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610bcc602683610a87565b9150610bd782610b72565b604082019050919050565b5f6020820190508181035f830152610bf981610bc0565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f610c5a602d83610a87565b9150610c6582610c00565b604082019050919050565b5f6020820190508181035f830152610c8781610c4e565b9050919050565b5f81519050919050565b5f81905092915050565b5f5b83811015610cbf578082015181840152602081019050610ca4565b5f8484015250505050565b5f610cd482610c8e565b610cde8185610c98565b9350610cee818560208601610ca2565b80840191505092915050565b5f610d058284610cca565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f610d44601d83610a87565b9150610d4f82610d10565b602082019050919050565b5f6020820190508181035f830152610d7181610d38565b9050919050565b5f81519050919050565b5f601f19601f8301169050919050565b5f610d9c82610d78565b610da68185610a87565b9350610db6818560208601610ca2565b610dbf81610d82565b840191505092915050565b5f6020820190508181035f830152610de28184610d92565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26474726f6e582212205745052c7ead722a365092a14916da06bba0034979df1283c4156a263f3e104764736f6c63430008140033",
  "sourceMap": "1649:3469:8:-:0;;;1923:167;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2038:6;2046:5;1024:39:3;1042:6;1050:5;1057;1024:17;;;:39;;:::i;:::-;958:112;;2063:20:8::1;2076:6;2063:12;;;:20;;:::i;:::-;1923:167:::0;;;1649:3469;;2183:295:4;2321:29;2332:17;2321:10;;;:29;;:::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;;;:53;;:::i;:::-;;2360:112;2183:295;;;:::o;4624:135::-;4688:35;4701:11;:9;;;:11;;:::i;:::-;4714:8;4688:35;;;;;;;:::i;:::-;;;;;;;;4733:19;4743:8;4733:9;;;:19;;:::i;:::-;4624:135;:::o;1897:152::-;1963:37;1982:17;1963:18;;;:37;;:::i;:::-;2024:17;2015:27;;;;;;;;;;;;1897:152;:::o;6469:198:9:-;6552:12;6583:77;6604:6;6612:4;6583:77;;;;;;;;;;;;;;;;;:20;;;:77;;:::i;:::-;6576:84;;6469:198;;;;:::o;4108:122:4:-;4152:7;4178:39;3842:66;4205:11;;4178:26;;;:39;;:::i;:::-;:45;;;;;;;;;;;;4171:52;;4108:122;:::o;4312:201::-;4395:1;4375:22;;:8;:22;;;4367:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4498:8;4450:39;3842:66;4477:11;;4450:26;;;:39;;:::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;4312:201;:::o;1532:259::-;1613:37;1632:17;1613:18;;;:37;;:::i;:::-;1605:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:17;1710:48;1030:66;1737:20;;1710:26;;;:48;;:::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1532:259;:::o;6853:325:9:-;6994:12;7019;7033:23;7060:6;:19;;7080:4;7060:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:67;;;;7102:69;7129:6;7137:7;7146:10;7158:12;7102:26;;;:69;;:::i;:::-;7095:76;;;;6853:325;;;;;:::o;1614:190:11:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;1175:320:9:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;;;:18;;:::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;;;:33;;:::i;:::-;7466:628;;;;;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:128;371:7;411:44;404:5;400:56;389:67;;334:128;;;:::o;468:122::-;541:24;559:5;541:24;:::i;:::-;534:5;531:35;521:63;;580:1;577;570:12;521:63;468:122;:::o;596:126::-;633:7;673:42;666:5;662:54;651:65;;596:126;;;:::o;728:96::-;765:7;794:24;812:5;794:24;:::i;:::-;783:35;;728:96;;;:::o;830:185::-;887:5;918:6;912:13;903:22;;934:33;961:5;934:33;:::i;:::-;985:24;1003:5;985:24;:::i;:::-;976:33;;830:185;;;;:::o;1021:117::-;1130:1;1127;1120:12;1144:117;1253:1;1250;1243:12;1267:102;1308:6;1359:2;1355:7;1350:2;1343:5;1339:14;1335:28;1325:38;;1267:102;;;:::o;1375:180::-;1423:77;1420:1;1413:88;1520:4;1517:1;1510:15;1544:4;1541:1;1534:15;1561:281;1644:27;1666:4;1644:27;:::i;:::-;1636:6;1632:40;1774:6;1762:10;1759:22;1738:18;1726:10;1723:34;1720:62;1717:88;;;1785:18;;:::i;:::-;1717:88;1825:10;1821:2;1814:22;1604:238;1561:281;;:::o;1848:129::-;1882:6;1909:20;;:::i;:::-;1899:30;;1938:33;1966:4;1958:6;1938:33;:::i;:::-;1848:129;;;:::o;1983:307::-;2044:4;2134:18;2126:6;2123:30;2120:56;;;2156:18;;:::i;:::-;2120:56;2194:29;2216:6;2194:29;:::i;:::-;2186:37;;2278:4;2272;2268:15;2260:23;;1983:307;;;:::o;2296:246::-;2377:1;2387:113;2401:6;2398:1;2395:13;2387:113;;;2486:1;2481:3;2477:11;2471:18;2467:1;2462:3;2458:11;2451:39;2423:2;2420:1;2416:10;2411:15;;2387:113;;;2534:1;2525:6;2520:3;2516:16;2509:27;2358:184;2296:246;;;:::o;2548:432::-;2636:5;2661:65;2677:48;2718:6;2677:48;:::i;:::-;2661:65;:::i;:::-;2652:74;;2749:6;2742:5;2735:21;2787:4;2780:5;2776:16;2825:3;2816:6;2811:3;2807:16;2804:25;2801:112;;;2832:79;;:::i;:::-;2801:112;2922:52;2967:6;2962:3;2957;2922:52;:::i;:::-;2642:338;2548:432;;;;;:::o;2999:353::-;3065:5;3114:3;3107:4;3099:6;3095:17;3091:27;3081:122;;3122:79;;:::i;:::-;3081:122;3232:6;3226:13;3257:89;3342:3;3334:6;3327:4;3319:6;3315:17;3257:89;:::i;:::-;3248:98;;3071:281;2999:353;;;;:::o;3358:834::-;3455:6;3463;3471;3520:2;3508:9;3499:7;3495:23;3491:32;3488:119;;;3526:79;;:::i;:::-;3488:119;3646:1;3671:64;3727:7;3718:6;3707:9;3703:22;3671:64;:::i;:::-;3661:74;;3617:128;3784:2;3810:64;3866:7;3857:6;3846:9;3842:22;3810:64;:::i;:::-;3800:74;;3755:129;3944:2;3933:9;3929:18;3923:25;3975:18;3967:6;3964:30;3961:117;;;3997:79;;:::i;:::-;3961:117;4102:73;4167:7;4158:6;4147:9;4143:22;4102:73;:::i;:::-;4092:83;;3894:291;3358:834;;;;;:::o;4198:118::-;4285:24;4303:5;4285:24;:::i;:::-;4280:3;4273:37;4198:118;;:::o;4322:332::-;4443:4;4481:2;4470:9;4466:18;4458:26;;4494:71;4562:1;4551:9;4547:17;4538:6;4494:71;:::i;:::-;4575:72;4643:2;4632:9;4628:18;4619:6;4575:72;:::i;:::-;4322:332;;;;;:::o;4660:169::-;4744:11;4778:6;4773:3;4766:19;4818:4;4813:3;4809:14;4794:29;;4660:169;;;;:::o;4835:225::-;4975:34;4971:1;4963:6;4959:14;4952:58;5044:8;5039:2;5031:6;5027:15;5020:33;4835:225;:::o;5066:366::-;5208:3;5229:67;5293:2;5288:3;5229:67;:::i;:::-;5222:74;;5305:93;5394:3;5305:93;:::i;:::-;5423:2;5418:3;5414:12;5407:19;;5066:366;;;:::o;5438:419::-;5604:4;5642:2;5631:9;5627:18;5619:26;;5691:9;5685:4;5681:20;5677:1;5666:9;5662:17;5655:47;5719:131;5845:4;5719:131;:::i;:::-;5711:139;;5438:419;;;:::o;5863:232::-;6003:34;5999:1;5991:6;5987:14;5980:58;6072:15;6067:2;6059:6;6055:15;6048:40;5863:232;:::o;6101:366::-;6243:3;6264:67;6328:2;6323:3;6264:67;:::i;:::-;6257:74;;6340:93;6429:3;6340:93;:::i;:::-;6458:2;6453:3;6449:12;6442:19;;6101:366;;;:::o;6473:419::-;6639:4;6677:2;6666:9;6662:18;6654:26;;6726:9;6720:4;6716:20;6712:1;6701:9;6697:17;6690:47;6754:131;6880:4;6754:131;:::i;:::-;6746:139;;6473:419;;;:::o;6898:98::-;6949:6;6983:5;6977:12;6967:22;;6898:98;;;:::o;7002:147::-;7103:11;7140:3;7125:18;;7002:147;;;;:::o;7155:386::-;7259:3;7287:38;7319:5;7287:38;:::i;:::-;7341:88;7422:6;7417:3;7341:88;:::i;:::-;7334:95;;7438:65;7496:6;7491:3;7484:4;7477:5;7473:16;7438:65;:::i;:::-;7528:6;7523:3;7519:16;7512:23;;7263:278;7155:386;;;;:::o;7547:271::-;7677:3;7699:93;7788:3;7779:6;7699:93;:::i;:::-;7692:100;;7809:3;7802:10;;7547:271;;;;:::o;7824:179::-;7964:31;7960:1;7952:6;7948:14;7941:55;7824:179;:::o;8009:366::-;8151:3;8172:67;8236:2;8231:3;8172:67;:::i;:::-;8165:74;;8248:93;8337:3;8248:93;:::i;:::-;8366:2;8361:3;8357:12;8350:19;;8009:366;;;:::o;8381:419::-;8547:4;8585:2;8574:9;8570:18;8562:26;;8634:9;8628:4;8624:20;8620:1;8609:9;8605:17;8598:47;8662:131;8788:4;8662:131;:::i;:::-;8654:139;;8381:419;;;:::o;8806:99::-;8858:6;8892:5;8886:12;8876:22;;8806:99;;;:::o;8911:377::-;8999:3;9027:39;9060:5;9027:39;:::i;:::-;9082:71;9146:6;9141:3;9082:71;:::i;:::-;9075:78;;9162:65;9220:6;9215:3;9208:4;9201:5;9197:16;9162:65;:::i;:::-;9252:29;9274:6;9252:29;:::i;:::-;9247:3;9243:39;9236:46;;9003:285;8911:377;;;;:::o;9294:313::-;9407:4;9445:2;9434:9;9430:18;9422:26;;9494:9;9488:4;9484:20;9480:1;9469:9;9465:17;9458:47;9522:78;9595:4;9586:6;9522:78;:::i;:::-;9514:86;;9294:313;;;;:::o;1649:3469:8:-;;;;;;;",
  "deployedSourceMap": "1649:3469:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:5;:9;:11::i;:::-;1649:3469:8;;2675:11:5;:9;:11::i;:::-;1649:3469:8;3960:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4470:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3363:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3697:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2807:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2322:110:5;2370:17;:15;:17::i;:::-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;3960:134:8:-;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;4033:54:::1;4051:17;4070:9;;;;;;;;;;;::::0;4081:5:::1;4033:17;:54::i;:::-;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;3960:134;:::o;4470:164::-;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;4579:48:::1;4597:17;4616:4;;4579:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4622:4;4579:17;:48::i;:::-;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;4470:164;;;:::o;3363:129::-;3415:23;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;3468:17:::1;:15;:17::i;:::-;3450:35;;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;3363:129;:::o;3697:103::-;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;3771:22:::1;3784:8;3771:12;:22::i;:::-;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;3697:103;:::o;2807:96::-;2850:14;2278:11;:9;:11::i;:::-;2264:25;;:10;:25;;;2260:99;;2885:11:::1;:9;:11::i;:::-;2876:20;;2260:99:::0;;;2337:11;:9;:11::i;:::-;2260:99;2807:96;:::o;4909:207::-;4994:11;:9;:11::i;:::-;4980:25;;:10;:25;;;4972:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;5086:23;:21;:23::i;:::-;4909:207::o;1148:140:3:-;1215:12;1246:35;:33;:35::i;:::-;1239:42;;1148:140;:::o;948:895:5:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1686:1;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;4108:122:4;4152:7;4178:39;3842:66;4205:11;;4178:26;:39::i;:::-;:45;;;;;;;;;;;;4171:52;;4108:122;:::o;2183:295::-;2321:29;2332:17;2321:10;:29::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;:53::i;:::-;;2360:112;2183:295;;;:::o;4624:135::-;4688:35;4701:11;:9;:11::i;:::-;4714:8;4688:35;;;;;;;:::i;:::-;;;;;;;;4733:19;4743:8;4733:9;:19::i;:::-;4624:135;:::o;3198:46:5:-;:::o;1301:140:4:-;1354:7;1380:48;1030:66;1407:20;;1380:26;:48::i;:::-;:54;;;;;;;;;;;;1373:61;;1301:140;:::o;1614:190:11:-;1675:21;1784:4;1774:14;;1614:190;;;:::o;1897:152:4:-;1963:37;1982:17;1963:18;:37::i;:::-;2024:17;2015:27;;;;;;;;;;;;1897:152;:::o;6469:198:9:-;6552:12;6583:77;6604:6;6612:4;6583:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6576:84;;6469:198;;;;:::o;4312:201:4:-;4395:1;4375:22;;:8;:22;;;4367:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4498:8;4450:39;3842:66;4477:11;;4450:26;:39::i;:::-;:45;;;:56;;;;;;;;;;;;;;;;;;4312:201;:::o;1532:259::-;1613:37;1632:17;1613:18;:37::i;:::-;1605:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:17;1710:48;1030:66;1737:20;;1710:26;:48::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1532:259;:::o;6853:325:9:-;6994:12;7019;7033:23;7060:6;:19;;7080:4;7060:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:67;;;;7102:69;7129:6;7137:7;7146:10;7158:12;7102:26;:69::i;:::-;7095:76;;;;6853:325;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:12;197:1;194;187:12;211:117;320:1;317;310:12;334:128;371:7;411:44;404:5;400:56;389:67;;334:128;;;:::o;468:122::-;541:24;559:5;541:24;:::i;:::-;534:5;531:35;521:63;;580:1;577;570:12;521:63;468:122;:::o;596:126::-;633:7;673:42;666:5;662:54;651:65;;596:126;;;:::o;728:96::-;765:7;794:24;812:5;794:24;:::i;:::-;783:35;;728:96;;;:::o;830:181::-;876:5;914:6;901:20;892:29;;930:33;957:5;930:33;:::i;:::-;981:24;999:5;981:24;:::i;:::-;972:33;;830:181;;;;:::o;1017:329::-;1076:6;1125:2;1113:9;1104:7;1100:23;1096:32;1093:119;;;1131:79;;:::i;:::-;1093:119;1251:1;1276:53;1321:7;1312:6;1301:9;1297:22;1276:53;:::i;:::-;1266:63;;1222:117;1017:329;;;;:::o;1352:117::-;1461:1;1458;1451:12;1475:117;1584:1;1581;1574:12;1598:117;1707:1;1704;1697:12;1734:552;1791:8;1801:6;1851:3;1844:4;1836:6;1832:17;1828:27;1818:122;;1859:79;;:::i;:::-;1818:122;1972:6;1959:20;1949:30;;2002:18;1994:6;1991:30;1988:117;;;2024:79;;:::i;:::-;1988:117;2138:4;2130:6;2126:17;2114:29;;2192:3;2184:4;2176:6;2172:17;2162:8;2158:32;2155:41;2152:128;;;2199:79;;:::i;:::-;2152:128;1734:552;;;;;:::o;2292:672::-;2371:6;2379;2387;2436:2;2424:9;2415:7;2411:23;2407:32;2404:119;;;2442:79;;:::i;:::-;2404:119;2562:1;2587:53;2632:7;2623:6;2612:9;2608:22;2587:53;:::i;:::-;2577:63;;2533:117;2717:2;2706:9;2702:18;2689:32;2748:18;2740:6;2737:30;2734:117;;;2770:79;;:::i;:::-;2734:117;2883:64;2939:7;2930:6;2919:9;2915:22;2883:64;:::i;:::-;2865:82;;;;2660:297;2292:672;;;;;:::o;2970:118::-;3057:24;3075:5;3057:24;:::i;:::-;3052:3;3045:37;2970:118;;:::o;3094:222::-;3187:4;3225:2;3214:9;3210:18;3202:26;;3238:71;3306:1;3295:9;3291:17;3282:6;3238:71;:::i;:::-;3094:222;;;;:::o;3322:169::-;3406:11;3440:6;3435:3;3428:19;3480:4;3475:3;3471:14;3456:29;;3322:169;;;;:::o;3497:290::-;3637:34;3633:1;3625:6;3621:14;3614:58;3706:34;3701:2;3693:6;3689:15;3682:59;3775:4;3770:2;3762:6;3758:15;3751:29;3497:290;:::o;3793:366::-;3935:3;3956:67;4020:2;4015:3;3956:67;:::i;:::-;3949:74;;4032:93;4121:3;4032:93;:::i;:::-;4150:2;4145:3;4141:12;4134:19;;3793:366;;;:::o;4165:419::-;4331:4;4369:2;4358:9;4354:18;4346:26;;4418:9;4412:4;4408:20;4404:1;4393:9;4389:17;4382:47;4446:131;4572:4;4446:131;:::i;:::-;4438:139;;4165:419;;;:::o;4590:332::-;4711:4;4749:2;4738:9;4734:18;4726:26;;4762:71;4830:1;4819:9;4815:17;4806:6;4762:71;:::i;:::-;4843:72;4911:2;4900:9;4896:18;4887:6;4843:72;:::i;:::-;4590:332;;;;;:::o;4928:225::-;5068:34;5064:1;5056:6;5052:14;5045:58;5137:8;5132:2;5124:6;5120:15;5113:33;4928:225;:::o;5159:366::-;5301:3;5322:67;5386:2;5381:3;5322:67;:::i;:::-;5315:74;;5398:93;5487:3;5398:93;:::i;:::-;5516:2;5511:3;5507:12;5500:19;;5159:366;;;:::o;5531:419::-;5697:4;5735:2;5724:9;5720:18;5712:26;;5784:9;5778:4;5774:20;5770:1;5759:9;5755:17;5748:47;5812:131;5938:4;5812:131;:::i;:::-;5804:139;;5531:419;;;:::o;5956:232::-;6096:34;6092:1;6084:6;6080:14;6073:58;6165:15;6160:2;6152:6;6148:15;6141:40;5956:232;:::o;6194:366::-;6336:3;6357:67;6421:2;6416:3;6357:67;:::i;:::-;6350:74;;6433:93;6522:3;6433:93;:::i;:::-;6551:2;6546:3;6542:12;6535:19;;6194:366;;;:::o;6566:419::-;6732:4;6770:2;6759:9;6755:18;6747:26;;6819:9;6813:4;6809:20;6805:1;6794:9;6790:17;6783:47;6847:131;6973:4;6847:131;:::i;:::-;6839:139;;6566:419;;;:::o;6991:98::-;7042:6;7076:5;7070:12;7060:22;;6991:98;;;:::o;7095:147::-;7196:11;7233:3;7218:18;;7095:147;;;;:::o;7248:246::-;7329:1;7339:113;7353:6;7350:1;7347:13;7339:113;;;7438:1;7433:3;7429:11;7423:18;7419:1;7414:3;7410:11;7403:39;7375:2;7372:1;7368:10;7363:15;;7339:113;;;7486:1;7477:6;7472:3;7468:16;7461:27;7310:184;7248:246;;;:::o;7500:386::-;7604:3;7632:38;7664:5;7632:38;:::i;:::-;7686:88;7767:6;7762:3;7686:88;:::i;:::-;7679:95;;7783:65;7841:6;7836:3;7829:4;7822:5;7818:16;7783:65;:::i;:::-;7873:6;7868:3;7864:16;7857:23;;7608:278;7500:386;;;;:::o;7892:271::-;8022:3;8044:93;8133:3;8124:6;8044:93;:::i;:::-;8037:100;;8154:3;8147:10;;7892:271;;;;:::o;8169:179::-;8309:31;8305:1;8297:6;8293:14;8286:55;8169:179;:::o;8354:366::-;8496:3;8517:67;8581:2;8576:3;8517:67;:::i;:::-;8510:74;;8593:93;8682:3;8593:93;:::i;:::-;8711:2;8706:3;8702:12;8695:19;;8354:366;;;:::o;8726:419::-;8892:4;8930:2;8919:9;8915:18;8907:26;;8979:9;8973:4;8969:20;8965:1;8954:9;8950:17;8943:47;9007:131;9133:4;9007:131;:::i;:::-;8999:139;;8726:419;;;:::o;9151:99::-;9203:6;9237:5;9231:12;9221:22;;9151:99;;;:::o;9256:102::-;9297:6;9348:2;9344:7;9339:2;9332:5;9328:14;9324:28;9314:38;;9256:102;;;:::o;9364:377::-;9452:3;9480:39;9513:5;9480:39;:::i;:::-;9535:71;9599:6;9594:3;9535:71;:::i;:::-;9528:78;;9615:65;9673:6;9668:3;9661:4;9654:5;9650:16;9615:65;:::i;:::-;9705:29;9727:6;9705:29;:::i;:::-;9700:3;9696:39;9689:46;;9456:285;9364:377;;;;:::o;9747:313::-;9860:4;9898:2;9887:9;9883:18;9875:26;;9947:9;9941:4;9937:20;9933:1;9922:9;9918:17;9911:47;9975:78;10048:4;10039:6;9975:78;:::i;:::-;9967:86;;9747:313;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(\n        address _logic,\n        address admin_,\n        bytes memory _data\n    ) payable ERC1967Proxy(_logic, _data) {\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function admin() external ifAdmin returns (address admin_) {\n        admin_ = _getAdmin();\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function implementation() external ifAdmin returns (address implementation_) {\n        implementation_ = _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\n     */\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\n        _changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\n     */\n    function upgradeTo(address newImplementation) external ifAdmin {\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\n        _upgradeToAndCall(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\n     */\n    function _beforeFallback() internal virtual override {\n        require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n        super._beforeFallback();\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
    "exportedSymbols": {
      "Address": [
        1156
      ],
      "ERC1967Proxy": [
        162
      ],
      "ERC1967Upgrade": [
        480
      ],
      "IBeacon": [
        542
      ],
      "IERC1822Proxiable": [
        125
      ],
      "Proxy": [
        532
      ],
      "StorageSlot": [
        1238
      ],
      "TransparentUpgradeableProxy": [
        826
      ]
    },
    "id": 827,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 680,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "133:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "../ERC1967/ERC1967Proxy.sol",
        "id": 681,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 163,
        "src": "158:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 683,
              "name": "ERC1967Proxy",
              "nameLocations": [
                "1689:12:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 162,
              "src": "1689:12:8"
            },
            "id": 684,
            "nodeType": "InheritanceSpecifier",
            "src": "1689:12:8"
          }
        ],
        "canonicalName": "TransparentUpgradeableProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 682,
          "nodeType": "StructuredDocumentation",
          "src": "197:1451:8",
          "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
        },
        "fullyImplemented": true,
        "id": 826,
        "linearizedBaseContracts": [
          826,
          162,
          480,
          532
        ],
        "name": "TransparentUpgradeableProxy",
        "nameLocation": "1658:27:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "2053:37:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 699,
                        "name": "admin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "2076:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 698,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "2063:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:8"
                }
              ]
            },
            "documentation": {
              "id": 685,
              "nodeType": "StructuredDocumentation",
              "src": "1708:210:8",
              "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
            },
            "id": 703,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 694,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 687,
                    "src": "2038:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 695,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 691,
                    "src": "2046:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 696,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 693,
                  "name": "ERC1967Proxy",
                  "nameLocations": [
                    "2025:12:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 162,
                  "src": "2025:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2025:27:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1952:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "1944:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "1976:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "1968:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2005:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "1992:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:82:8"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2053:0:8"
            },
            "scope": 826,
            "src": "1923:167:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "2250:115:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 706,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2264:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2268:6:8",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2264:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 708,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2278:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2278:11:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2264:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 716,
                    "nodeType": "Block",
                    "src": "2323:36:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 713,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "2337:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2337:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 715,
                        "nodeType": "ExpressionStatement",
                        "src": "2337:11:8"
                      }
                    ]
                  },
                  "id": 717,
                  "nodeType": "IfStatement",
                  "src": "2260:99:8",
                  "trueBody": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "2291:26:8",
                    "statements": [
                      {
                        "id": 711,
                        "nodeType": "PlaceholderStatement",
                        "src": "2305:1:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 704,
              "nodeType": "StructuredDocumentation",
              "src": "2096:130:8",
              "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
            },
            "id": 719,
            "name": "ifAdmin",
            "nameLocation": "2240:7:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2247:2:8"
            },
            "src": "2231:134:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 732,
              "nodeType": "Block",
              "src": "2866:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 727,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "2876:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 728,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2885:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2885:11:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2876:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:20:8"
                }
              ]
            },
            "documentation": {
              "id": 720,
              "nodeType": "StructuredDocumentation",
              "src": "2371:431:8",
              "text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
            },
            "functionSelector": "f851a440",
            "id": 733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 723,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 722,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "2833:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "2833:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:7:8"
              }
            ],
            "name": "admin",
            "nameLocation": "2816:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2821:2:8"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2858:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "2850:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2849:16:8"
            },
            "scope": 826,
            "src": "2807:96:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "3440:52:8",
              "statements": [
                {
                  "expression": {
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 741,
                      "name": "implementation_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "3450:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 742,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          161
                        ],
                        "referencedDeclaration": 161,
                        "src": "3468:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3468:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3450:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:35:8"
                }
              ]
            },
            "documentation": {
              "id": 734,
              "nodeType": "StructuredDocumentation",
              "src": "2909:449:8",
              "text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "functionSelector": "5c60da1b",
            "id": 747,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 737,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 736,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "3398:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "3398:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3398:7:8"
              }
            ],
            "name": "implementation",
            "nameLocation": "3372:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3386:2:8"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "3423:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "3415:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3414:25:8"
            },
            "scope": 826,
            "src": "3363:129:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "3761:39:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "3784:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 755,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "3771:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:22:8"
                }
              ]
            },
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "3498:194:8",
              "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
            },
            "functionSelector": "8f283970",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 752,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "3753:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "3753:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3753:7:8"
              }
            ],
            "name": "changeAdmin",
            "nameLocation": "3706:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "3726:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "3718:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3718:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3717:18:8"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3761:0:8"
            },
            "scope": 826,
            "src": "3697:103:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "4023:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 769,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "4051:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4076:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4070:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 770,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4070:5:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4070:9:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4081:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 768,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "4033:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4033:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "4033:54:8"
                }
              ]
            },
            "documentation": {
              "id": 761,
              "nodeType": "StructuredDocumentation",
              "src": "3806:149:8",
              "text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
            },
            "functionSelector": "3659cfe6",
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 765,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "4015:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "4015:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4015:7:8"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "3969:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3987:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "3979:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3979:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:27:8"
            },
            "returnParameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4023:0:8"
            },
            "scope": 826,
            "src": "3960:134:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "4569:65:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 789,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "4597:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 790,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "4616:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4622:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 788,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "4579:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4579:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "4579:48:8"
                }
              ]
            },
            "documentation": {
              "id": 779,
              "nodeType": "StructuredDocumentation",
              "src": "4100:365:8",
              "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
            },
            "functionSelector": "4f1ef286",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 785,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "4561:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "4561:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4561:7:8"
              }
            ],
            "name": "upgradeToAndCall",
            "nameLocation": "4479:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4504:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4496:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4538:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4523:19:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:48:8"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:0:8"
            },
            "scope": 826,
            "src": "4470:164:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "4753:35:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 801,
                      "name": "_getAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "4770:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 800,
                  "id": 803,
                  "nodeType": "Return",
                  "src": "4763:18:8"
                }
              ]
            },
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "4640:50:8",
              "text": " @dev Returns the current admin."
            },
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_admin",
            "nameLocation": "4704:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4710:2:8"
            },
            "returnParameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "4744:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:9:8"
            },
            "scope": 826,
            "src": "4695:93:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              531
            ],
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "4962:154:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 811,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4980:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4984:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4980:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 813,
                            "name": "_getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "4994:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4994:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4980:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5007:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        },
                        "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4972:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4972:104:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "4972:104:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 819,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5086:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$826_$",
                          "typeString": "type(contract super TransparentUpgradeableProxy)"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5092:15:8",
                      "memberName": "_beforeFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 531,
                      "src": "5086:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "5086:23:8"
                }
              ]
            },
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "4794:110:8",
              "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
            },
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFallback",
            "nameLocation": "4918:15:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 808,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4953:8:8"
            },
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4933:2:8"
            },
            "returnParameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4962:0:8"
            },
            "scope": 826,
            "src": "4909:207:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 827,
        "src": "1649:3469:8",
        "usedErrors": [],
        "usedEvents": [
          181,
          327,
          392
        ]
      }
    ],
    "src": "133:4986:8"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
    "exportedSymbols": {
      "Address": [
        1156
      ],
      "ERC1967Proxy": [
        162
      ],
      "ERC1967Upgrade": [
        480
      ],
      "IBeacon": [
        542
      ],
      "IERC1822Proxiable": [
        125
      ],
      "Proxy": [
        532
      ],
      "StorageSlot": [
        1238
      ],
      "TransparentUpgradeableProxy": [
        826
      ]
    },
    "id": 827,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 680,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "133:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "../ERC1967/ERC1967Proxy.sol",
        "id": 681,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 827,
        "sourceUnit": 163,
        "src": "158:37:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 683,
              "name": "ERC1967Proxy",
              "nameLocations": [
                "1689:12:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 162,
              "src": "1689:12:8"
            },
            "id": 684,
            "nodeType": "InheritanceSpecifier",
            "src": "1689:12:8"
          }
        ],
        "canonicalName": "TransparentUpgradeableProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 682,
          "nodeType": "StructuredDocumentation",
          "src": "197:1451:8",
          "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
        },
        "fullyImplemented": true,
        "id": 826,
        "linearizedBaseContracts": [
          826,
          162,
          480,
          532
        ],
        "name": "TransparentUpgradeableProxy",
        "nameLocation": "1658:27:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "2053:37:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 699,
                        "name": "admin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "2076:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 698,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "2063:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:20:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:20:8"
                }
              ]
            },
            "documentation": {
              "id": 685,
              "nodeType": "StructuredDocumentation",
              "src": "1708:210:8",
              "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
            },
            "id": 703,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 694,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 687,
                    "src": "2038:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 695,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 691,
                    "src": "2046:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 696,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 693,
                  "name": "ERC1967Proxy",
                  "nameLocations": [
                    "2025:12:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 162,
                  "src": "2025:12:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2025:27:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1952:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "1944:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1944:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "1976:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "1968:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 691,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2005:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "1992:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:82:8"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2053:0:8"
            },
            "scope": 826,
            "src": "1923:167:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 718,
              "nodeType": "Block",
              "src": "2250:115:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 706,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2264:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2268:6:8",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2264:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 708,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2278:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2278:11:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2264:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 716,
                    "nodeType": "Block",
                    "src": "2323:36:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 713,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "2337:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2337:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 715,
                        "nodeType": "ExpressionStatement",
                        "src": "2337:11:8"
                      }
                    ]
                  },
                  "id": 717,
                  "nodeType": "IfStatement",
                  "src": "2260:99:8",
                  "trueBody": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "2291:26:8",
                    "statements": [
                      {
                        "id": 711,
                        "nodeType": "PlaceholderStatement",
                        "src": "2305:1:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 704,
              "nodeType": "StructuredDocumentation",
              "src": "2096:130:8",
              "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
            },
            "id": 719,
            "name": "ifAdmin",
            "nameLocation": "2240:7:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2247:2:8"
            },
            "src": "2231:134:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 732,
              "nodeType": "Block",
              "src": "2866:37:8",
              "statements": [
                {
                  "expression": {
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 727,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "2876:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 728,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2885:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2885:11:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2876:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:20:8"
                }
              ]
            },
            "documentation": {
              "id": 720,
              "nodeType": "StructuredDocumentation",
              "src": "2371:431:8",
              "text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
            },
            "functionSelector": "f851a440",
            "id": 733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 723,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 722,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "2833:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "2833:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:7:8"
              }
            ],
            "name": "admin",
            "nameLocation": "2816:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2821:2:8"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2858:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 733,
                  "src": "2850:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2849:16:8"
            },
            "scope": 826,
            "src": "2807:96:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 746,
              "nodeType": "Block",
              "src": "3440:52:8",
              "statements": [
                {
                  "expression": {
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 741,
                      "name": "implementation_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "3450:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 742,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          161
                        ],
                        "referencedDeclaration": 161,
                        "src": "3468:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3468:17:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3450:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:35:8"
                }
              ]
            },
            "documentation": {
              "id": 734,
              "nodeType": "StructuredDocumentation",
              "src": "2909:449:8",
              "text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "functionSelector": "5c60da1b",
            "id": 747,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 737,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 736,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "3398:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "3398:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3398:7:8"
              }
            ],
            "name": "implementation",
            "nameLocation": "3372:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3386:2:8"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "3423:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 747,
                  "src": "3415:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3414:25:8"
            },
            "scope": 826,
            "src": "3363:129:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "3761:39:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "3784:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 755,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "3771:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 758,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:22:8"
                }
              ]
            },
            "documentation": {
              "id": 748,
              "nodeType": "StructuredDocumentation",
              "src": "3498:194:8",
              "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
            },
            "functionSelector": "8f283970",
            "id": 760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 752,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "3753:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "3753:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3753:7:8"
              }
            ],
            "name": "changeAdmin",
            "nameLocation": "3706:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "3726:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "3718:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3718:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3717:18:8"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3761:0:8"
            },
            "scope": 826,
            "src": "3697:103:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 777,
              "nodeType": "Block",
              "src": "4023:71:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 769,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 763,
                        "src": "4051:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4076:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4070:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 770,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4070:5:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4070:9:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4081:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 768,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "4033:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4033:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 776,
                  "nodeType": "ExpressionStatement",
                  "src": "4033:54:8"
                }
              ]
            },
            "documentation": {
              "id": 761,
              "nodeType": "StructuredDocumentation",
              "src": "3806:149:8",
              "text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
            },
            "functionSelector": "3659cfe6",
            "id": 778,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 765,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "4015:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "4015:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4015:7:8"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "3969:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3987:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "3979:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3979:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:27:8"
            },
            "returnParameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4023:0:8"
            },
            "scope": 826,
            "src": "3960:134:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "4569:65:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 789,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "4597:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 790,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "4616:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4622:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 788,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "4579:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4579:48:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 793,
                  "nodeType": "ExpressionStatement",
                  "src": "4579:48:8"
                }
              ]
            },
            "documentation": {
              "id": 779,
              "nodeType": "StructuredDocumentation",
              "src": "4100:365:8",
              "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
            },
            "functionSelector": "4f1ef286",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 785,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "4561:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 719,
                  "src": "4561:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4561:7:8"
              }
            ],
            "name": "upgradeToAndCall",
            "nameLocation": "4479:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4504:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4496:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4538:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "4523:19:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:48:8"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:0:8"
            },
            "scope": 826,
            "src": "4470:164:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "4753:35:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 801,
                      "name": "_getAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "4770:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4770:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 800,
                  "id": 803,
                  "nodeType": "Return",
                  "src": "4763:18:8"
                }
              ]
            },
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "4640:50:8",
              "text": " @dev Returns the current admin."
            },
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_admin",
            "nameLocation": "4704:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4710:2:8"
            },
            "returnParameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "4744:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:9:8"
            },
            "scope": 826,
            "src": "4695:93:8",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              531
            ],
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "4962:154:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 811,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4980:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4984:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4980:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 813,
                            "name": "_getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 340,
                            "src": "4994:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4994:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4980:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5007:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        },
                        "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4972:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4972:104:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "4972:104:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 819,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5086:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$826_$",
                          "typeString": "type(contract super TransparentUpgradeableProxy)"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5092:15:8",
                      "memberName": "_beforeFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 531,
                      "src": "5086:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "5086:23:8"
                }
              ]
            },
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "4794:110:8",
              "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
            },
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFallback",
            "nameLocation": "4918:15:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 808,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4953:8:8"
            },
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4933:2:8"
            },
            "returnParameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4962:0:8"
            },
            "scope": 826,
            "src": "4909:207:8",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 827,
        "src": "1649:3469:8",
        "usedErrors": [],
        "usedEvents": [
          181,
          327,
          392
        ]
      }
    ],
    "src": "133:4986:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.5f1834bc.Emscripten.clang"
  },
  "networks": {
    "*": {
      "events": {},
      "links": {},
      "address": "412767322d778d0d3096e035c926e7ba416647fb1c",
      "transactionHash": "60b14c6e15e7e73c47dbe3493ed80c98d0a03d81139e6ee6649263a55423c7e6"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2025-05-07T16:11:11.008Z"
}